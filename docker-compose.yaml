version: "3.8"
services:
  redis:
    image: redis
    command: redis-server --requirepass Redis2019!
    networks:
      - common.network
    ports:
      - "6379:6379"

  mongo1:
    image: mongo:7.0
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    networks:
      - common.network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Postgres2022!"
    ports:
      - "5432:5432"
    networks:
      - common.network
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    volumes:
      - /Users/f.areias/Documents/Courses/NiFi/infrastructure/postgresql/scripts_sql:/docker-entrypoint-initdb.d

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - common.network
    ports:
      - "5672:5672"
      - "15672:15672"

networks:
  common.network:
    driver: bridge
